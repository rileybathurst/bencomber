{
  "_from": "curtainsjs@^1.8.0",
  "_id": "curtainsjs@1.8.0",
  "_inBundle": false,
  "_integrity": "sha512-Olk3UmNVcbDO9krgVqq1Js+NaO4xBUpVL96vukzsRGjtESqRWclrBK7H+WQOdgiivBY6vtqilHEa/2QZXoWobA==",
  "_location": "/curtainsjs",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "curtainsjs@^1.8.0",
    "name": "curtainsjs",
    "escapedName": "curtainsjs",
    "rawSpec": "^1.8.0",
    "saveSpec": null,
    "fetchSpec": "^1.8.0"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/curtainsjs/-/curtainsjs-1.8.0.tgz",
  "_shasum": "aa93cdb0aedbc3eca4f223c3c8ae1661db866088",
  "_spec": "curtainsjs@^1.8.0",
  "_where": "/Users/rileybathurst/Sites/curtains",
  "author": {
    "name": "martinlaxenaire"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "<h2>What is it ?</h2>\r <p>\r     Shaders are the next front-end web developpment big thing, with the ability to create very powerful 3D interactions and animations. A lot of very good javascript libraries already handle WebGL but with most of them it's kind of a headache to position your meshes relative to the DOM elements of your web page.\r </p>\r <p>\r     curtains.js was created with just that issue in mind. It is a small vanilla WebGL javascript library that converts HTML elements containing images and videos into 3D WebGL textured planes, allowing you to animate them via shaders.<br />\r     You can define each plane size and position via CSS, which makes it super easy to add WebGL responsive planes all over your pages.\r </p>\r <p>\r <a href=\"https://www.martin-laxenaire.fr/libs/curtainsjs/index.html\" title=\"Examples\" target=\"_blank\">Examples</a> - <a href=\"https://github.com/martinlaxenaire/curtainsjs\" title=\"GitHub\" target=\"_blank\">GitHub</a> </p>\r ",
  "homepage": "https://github.com/martinlaxenaire/curtainsjs",
  "main": "libs/curtains.min.js",
  "name": "curtainsjs",
  "version": "1.8.0"
}
